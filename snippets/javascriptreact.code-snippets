{
  "Menu mobile toggle": {
    "prefix": "menu-mobile-toggle",
    "body": [
      "window.addEventListener(\"load\", function () {",
      "  const toggle = document.querySelector(\".menu-toggle\");",
      "  const menu = document.querySelector(\".menu\");",
      "  toggle && toggle.addEventListener(\"click\", handleToggleMenu);",
      "  function handleToggleMenu(e) {",
      "    menu && menu.classList.add(\"is-show\");",
      "  }",
      "  document.addEventListener(\"click\", handleClickOutside);",
      "  function handleClickOutside(e) {",
      "    if (e.target.matches(\".menu-toggle\") || e.target.matches(\".menu, .menu *\"))",
      "      return;",
      "    menu && menu.classList.remove(\"is-show\");",
      "  }",
      "});"
    ],
    "description": "Menu mobile toggle"
  },
  "Display time VN": {
    "prefix": "format-date-vn",
    "body": ["{new Date($1).toLocaleDateString(\"vi-VI\")}", "", ""],
    "description": "Display time VN"
  },
  "React array rendering list": {
    "prefix": "render-array-list",
    "body": ["{Array($1).fill(0).map((item, index) => (", "", "))}"],
    "description": "React array rendering list"
  },
  "Quick copy to clipboard": {
    "prefix": "clipboard-copy",
    "body": [
      "navigator.clipboard?.writeText && navigator.clipboard.writeText($1);"
    ],
    "description": "Quick copy to clipboard"
  },
  "Scroll to top": {
    "prefix": "scroll-to-top",
    "body": [
      "document.body.scrollIntoView({ behavior: \"smooth\", block: \"start\" });"
    ],
    "description": "Scroll to top"
  },
  "Scroll to bottom": {
    "prefix": "scroll-to-bottom",
    "body": [
      "document.body.scrollIntoView({ behavior: \"smooth\", block: \"end\" });"
    ],
    "description": "Scroll to bottom"
  },
  "Using PropTypes in React": {
    "prefix": "react-proptypes",
    "body": [
      "import PropTypes from \"prop-types\";",
      "$1.propTypes = {",
      "  // value: PropTypes.string",
      "}"
    ],
    "description": "Using PropTypes in React"
  },
  "Import styled-components in React": {
    "prefix": "react-styled-c",
    "body": ["import styled from \"styled-components\";", ""],
    "description": "Import styled-components in React"
  },
  "Using react hook form in react": {
    "prefix": "react-hook-form",
    "body": [
      "const {",
      "  control,",
      "  setValue,",
      "  getValues,",
      "  watch,",
      "  formState: { isValid, isSubmitting, errors },",
      "} = useForm({",
      "  mode: \"onChange\",",
      "  defaultValues: {},",
      "});"
    ],
    "description": "Using react hook form in react"
  }
}
